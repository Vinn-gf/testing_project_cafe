# UBCF only
@app.route("/api/recommend_ubcf/<int:uid>")
def api_recommend_ubcf(uid):
    mat, sim, knn = build_cf_model()
    cf_raw = rec_ubcf_scores(uid, mat, sim, knn)
    if not cf_raw:
        return jsonify({"recommendations": []})

    max_cf = max(cf_raw.values())
    seen   = {v["id_cafe"] for v in fetch_visited(uid) if isinstance(v, dict)}

    rows = []
    for cid, score in cf_raw.items():
        if cid in seen: continue
        info = fetch_cafe(cid)
        rows.append({
            "cafe_id":   cid,
            "nama_kafe": info.get("nama_kafe",""),
            "alamat":    info.get("alamat",""),
            "rating":    float(info.get("rating",0)),
            "score":     round(score / max_cf, 6)
        })

    df = pd.DataFrame(rows)
    top6 = df.sort_values(["score","rating"], ascending=[False,False]).head(6)
    top6 = top6.sort_values("rating", ascending=False)

    return jsonify({"recommendations": top6.to_dict("records")})